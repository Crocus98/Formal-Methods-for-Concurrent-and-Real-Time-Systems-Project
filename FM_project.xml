<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>//Train settings
const int NUM_TRAINS = 7;
const int SPEED[NUM_TRAINS] = {7,7,8,9,7,10,8};
const int MAX_CHARGE[NUM_TRAINS] = {150, 150, 150, 150, 150, 150, 150};
const int INITIAL_CHARGE[NUM_TRAINS] ={100,100,100,100,100,100,100}; //must be less than MAX_CHARGE
const int INITIAL_STATION[NUM_TRAINS] = {0,0,0,0,0,1,1};
const int T_LINES[NUM_TRAINS] = {1, 1, 0, 2, 1, 0, 1};
const int NEXT_STATION[NUM_TRAINS] = {0,0,0,0,0,0,0}; //must be inside the line

//Station settings
const int NUM_STATIONS = 5;
const int MAX_TRACKS[NUM_STATIONS] = {4,3,5,3,4};

//Railways settins
const int LINES [3][4] = {{0,1,2,3},{0,1,2,4},{3,2,4,-1}}; //0,1,2
const int DISTANCES [5][5] ={{0,70,-1,-1,-1},
                             {70,0,50,-1,-1},
                             {-1,50,0,60,80},
                             {-1,-1,60,0,-1},
                             {-1,-1,80,-1,0}};
const int MAX_DELAYS [5][5] ={{0,15,-1,-1,-1},
                             {15,0,11,-1,-1},
                             {-1,11,0,12,16},
                             {-1,-1,12,0,-1},
                             {-1,-1,16,-1,0}};

//Channels
chan enter_queue[NUM_TRAINS][NUM_STATIONS];
</declaration>
	<template>
		<name x="5" y="5">Train</name>
		<parameter>const int [0,6] id_train, int charge, const int max_charge, const int speed,  int current_station, const int line, int next_station</parameter>
		<declaration>clock mov_time;
clock waiting_time;

int request_threshold = 2, passengers_threshold = 5;

void increase_charge(){
    charge += 1;
}

void decrease_charge(){
    charge -= 1;
}
</declaration>
		<location id="id0" x="-882" y="-697">
			<name x="-908" y="-731">charging</name>
		</location>
		<location id="id1" x="-544" y="-697">
			<name x="-570" y="-731">moving</name>
		</location>
		<location id="id2" x="-544" y="-476">
			<name x="-561" y="-459">waiting</name>
		</location>
		<location id="id3" x="-875" y="-476">
			<name x="-901" y="-459">waiting2</name>
		</location>
		<init ref="id0"/>
		<transition>
			<source ref="id2"/>
			<target ref="id0"/>
			<label kind="synchronisation" x="-773" y="-612">enter_station?</label>
			<label kind="assignment" x="-765" y="-595">waiting_time = 0</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id3"/>
			<label kind="guard" x="-1300" y="-501">waiting_time &lt; request_threshold - 1</label>
			<label kind="assignment" x="-1181" y="-518">decrease_charge()</label>
			<nail x="-1062" y="-476"/>
			<nail x="-986" y="-536"/>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id2"/>
			<label kind="guard" x="-833" y="-518">waiting_time &gt;= request_threshold-1</label>
			<label kind="assignment" x="-782" y="-535">decrease_charge()</label>
			<nail x="-714" y="-501"/>
		</transition>
		<transition>
			<source ref="id2"/>
			<target ref="id3"/>
			<label kind="assignment" x="-833" y="-433">waiting_time = 0, decrease_charge()</label>
			<nail x="-713" y="-451"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id1"/>
			<label kind="assignment" x="-434" y="-731">decrease_charge()</label>
			<nail x="-451" y="-765"/>
			<nail x="-434" y="-697"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id0"/>
			<label kind="guard" x="-1130" y="-748">charge &lt; max_charge</label>
			<label kind="assignment" x="-1112" y="-731">increase_charge()</label>
			<nail x="-993" y="-697"/>
			<nail x="-959" y="-756"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="assignment" x="-535" y="-586">waiting_time = 0, decrease_charge()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="-850" y="-739">waiting_time &gt;= passengers_threshold</label>
			<label kind="assignment" x="-765" y="-722">mov_time = 0</label>
		</transition>
	</template>
	<template>
		<name>Template0</name>
		<location id="id4" x="0" y="0">
		</location>
		<location id="id5" x="119" y="0">
		</location>
		<location id="id6" x="-178" y="0">
		</location>
		<init ref="id4"/>
		<transition>
			<source ref="id4"/>
			<target ref="id5"/>
		</transition>
		<transition>
			<source ref="id6"/>
			<target ref="id4"/>
		</transition>
	</template>
	<template>
		<name>Station</name>
		<parameter>const int[0,4] id_station,const int max_tracks</parameter>
		<declaration>int count_train = 0;
int [-1,NUM_TRAINS]waiting_queue[NUM_TRAINS];

void increase_count(){
    count_train += 1;
}

void initialize_waiting_queue ()
{
    for (i : int[0, NUM_TRAINS-1]){
        waiting_queue[i] = -1;
    }
}

void dequeue ()
{
    for (i : int[1,NUM_TRAINS-1]){
        waiting_queue[i-1] = waiting_queue[i];
    }
    waiting_queue[NUM_TRAINS-1] = -1;
}

void enqueue (int p)
{
    int i = 0;
    while (waiting_queue[i]&gt;=0){
        i++;
    }
    waiting_queue[i]=p;
}</declaration>
		<location id="id7" x="-1394" y="-884">
			<name x="-1462" y="-892">Initialize</name>
			<committed/>
		</location>
		<location id="id8" x="-1394" y="-663">
			<name x="-1436" y="-680">Idle</name>
		</location>
		<init ref="id7"/>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<nail x="-1258" y="-731"/>
			<nail x="-1326" y="-756"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id8"/>
			<label kind="select" x="-1470" y="-527">id_train: int [0,NUM_TRAINS-1]</label>
			<label kind="synchronisation" x="-1479" y="-501">enter_queue[id_train][id_station]?</label>
			<label kind="assignment" x="-1436" y="-552">enqueue(id_train)</label>
			<nail x="-1385" y="-552"/>
			<nail x="-1487" y="-561"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id8"/>
			<label kind="assignment" x="-1555" y="-782">initialize_waiting_queue()</label>
		</transition>
	</template>
	<system>// Place template instantiations here.
//id_train, charge, max_charge, speed, current_station, line, next_station
train_0 = Train (0, INITIAL_CHARGE[0], MAX_CHARGE[0], SPEED[0], INITIAL_STATION[0], T_LINES[0], NEXT_STATION[0]);
train_1 = Train (1, INITIAL_CHARGE[1], MAX_CHARGE[1], SPEED[1], INITIAL_STATION[1], T_LINES[1], NEXT_STATION[1]);
train_2 = Train (2, INITIAL_CHARGE[2], MAX_CHARGE[2], SPEED[2], INITIAL_STATION[2], T_LINES[2], NEXT_STATION[2]);
train_3 = Train (3, INITIAL_CHARGE[3], MAX_CHARGE[3], SPEED[3], INITIAL_STATION[3], T_LINES[3], NEXT_STATION[3]);
train_4 = Train (4, INITIAL_CHARGE[4], MAX_CHARGE[4], SPEED[4], INITIAL_STATION[4], T_LINES[4], NEXT_STATION[4]);
train_5 = Train (5, INITIAL_CHARGE[5], MAX_CHARGE[5], SPEED[5], INITIAL_STATION[5], T_LINES[5], NEXT_STATION[5]);
train_6 = Train (6, INITIAL_CHARGE[6], MAX_CHARGE[6], SPEED[6], INITIAL_STATION[6], T_LINES[6], NEXT_STATION[6]);


station_0 = Station(0,3);

// List one or more processes to be composed into a system.
system train_0, train_1, train_2, train_3, train_4, train_5, train_6, station_0;
    </system>
	<queries>
		<query>
			<formula></formula>
			<comment></comment>
		</query>
	</queries>
</nta>
